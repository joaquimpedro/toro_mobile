// Mocks generated by Mockito 5.0.9 from annotations
// in toro_mobile/test/controllers/trends_page_controller_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dio/src/dio.dart' as _i3;
import 'package:flutter_simple_dependency_injection/src/injector.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:toro_mobile/models/stock.dart' as _i6;
import 'package:toro_mobile/repositories/stock_repository.dart' as _i4;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeInjector extends _i1.Fake implements _i2.Injector {}

class _FakeDio extends _i1.Fake implements _i3.Dio {}

/// A class which mocks [StockRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockStockRepository extends _i1.Mock implements _i4.StockRepository {
  MockStockRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Injector get injector => (super.noSuchMethod(Invocation.getter(#injector),
      returnValue: _FakeInjector()) as _i2.Injector);
  @override
  _i3.Dio get dio =>
      (super.noSuchMethod(Invocation.getter(#dio), returnValue: _FakeDio())
          as _i3.Dio);
  @override
  _i5.Future<List<_i6.Stock>> fetchTrends() =>
      (super.noSuchMethod(Invocation.method(#fetchTrends, []),
              returnValue: Future<List<_i6.Stock>>.value(<_i6.Stock>[]))
          as _i5.Future<List<_i6.Stock>>);
  @override
  _i5.Future<Map<bool, String>> orderStock(_i6.Stock? stock, int? amount) =>
      (super.noSuchMethod(Invocation.method(#orderStock, [stock, amount]),
              returnValue: Future<Map<bool, String>>.value(<bool, String>{}))
          as _i5.Future<Map<bool, String>>);
}
